node {
    stage ('Clone') {
        git url: 'https://github.com/sadheeshkt/autobuild.git'
    }
   
    def classesGroovy = load 'Classes.groovy'
    def urlConfig = classesGroovy.URLConfig
    def urlConfigList=[]
    def urlConfigSplit=[]
    def urlList = new File(pwd()+'/autobuild.config') as String[]
    for ( item in urlList ) {
      urlConfigSplit=  urlConfig.configSplit(item)
     urlConfigList.add(urlConfig.URLConfigItem(urlConfigSplit[0],urlConfigSplit[1], urlConfigSplit[2]))
     }
  
    urlConfigList.eachWithIndex { item, index ->
     echo "repo> "+item.repo+" url> "+item.url+" pomPath> "+item.pomPath
    }
  
    
    def mvnHome
    stage ('Clone') {
        git url: 'https://github.com/sadheeshkt/spring-cld.git'
    }
    stage('Build') {
         def workspace = pwd()
         def workspacePath= workspace.replace("Program Files (x86)", "PROGRA~2");
         echo 'workspacePath>'+workspacePath
         def pomFile=workspacePath+"/greeting-service/pom.xml"
         
         git url : "https://github.com/sadheeshkt/spring-cld.git"
         mvnHome = tool 'maven3'
         def pom = readMavenPom file: 'greeting-service/pom.xml'
         echo pom.version
         bat "${mvnHome}/bin/mvn -f $pomFile clean compile package"
     }
}
